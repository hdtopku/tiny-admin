version: '3.8'  # Define the Docker Compose version

services:
  # MySQL service configuration
  mysql:
    image: mysql:8.0.40
    container_name: mysql
    command: |
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --lower_case_table_names=1
      --explicit_defaults_for_timestamp=true
      --max_allowed_packet=128M
      --authentication_policy=caching_sha2_password
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}  # Set the root password using an environment variable
    ports:
      - "3306:3306"
    volumes:
      - ~/mydata/mysql/data/db:/var/lib/mysql       # Data volume for persistence
      - ~/mydata/mysql/conf:/etc/mysql/conf.d       # Configuration files
      - ~/mydata/mysql/log:/var/log/mysql           # Log files
      - ~/mydata/mysql/sql:/sql # SQL script
    networks:
      - my_network

  # Redis service configuration
  redis:
    image: redis:latest
    container_name: redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}  # Set the Redis password
    ports:
      - "6379:6379"
    volumes:
      - ~/mydata/redis/data:/data  # Data persistence
    restart: always
    networks:
      - my_network

  # Nginx service configuration
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ~/mydata/nginx/conf:/etc/nginx                  # Nginx configuration
      - ~/mydata/nginx/html:/usr/share/nginx/html       # Static files
      - ~/mydata/nginx/logs:/var/log/nginx              # Log files
    restart: always
    networks:
      - my_network

  # Spring Boot service configuration
  springboot:
    build:
      context: ../../tiny-boot                          # Build context pointing to the project root
      dockerfile: Dockerfile                            # Specify the Dockerfile
    container_name: tiny_admin
    volumes:
      - ../../tiny-boot:/usr/src/app                    # Mount the Spring Boot project
      - ~/.m2/repository:/root/.m2/repository           # Mount the local Maven repository
    working_dir: /usr/src/app/tiny-admin/tiny-admin-starter
    command: mvn spring-boot:run                        # Run the Spring Boot application
    ports:
      - "8080:8080"                                     # Expose port 8080
    networks:
      - my_network
    environment:
      - SPRING_PROFILES_ACTIVE=prod                     # Specify the active Spring profile
    restart: always                                     # Automatically restart if the container stops
    depends_on:
      - mysql
      - redis

networks:
  my_network:
    driver: bridge
