version: '3.8'  # Define the Docker Compose version

services:
  # MySQL service configuration
  mysql:
    image: mysql:8.0.40
    container_name: mysql
    command: |
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --lower_case_table_names=1
      --explicit_defaults_for_timestamp=true
      --max_allowed_packet=128M
      --authentication_policy=caching_sha2_password
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}  # Set the root password using an environment variable
    ports:
      - 3306:3306
    volumes:
      - ~/mydata/mysql/data:/var/lib/mysql       # Data volume for persistence
      - ~/mydata/mysql/conf:/etc/mysql/conf.d       # Configuration files
      - ~/mydata/mysql/log:/var/log/mysql           # Log files
      - ~/mydata/mysql/sql:/sql # SQL script
    networks:
      - my_network

  # Redis service configuration
  redis:
    image: redis:latest
    container_name: redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}  # Set the Redis password
    ports:
      - 6379:6379
    volumes:
      - ~/mydata/redis/data:/data  # Data persistence
    restart: always
    networks:
      - my_network

  # Nginx service configuration
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ~/mydata/nginx/conf/nginx.conf:/etc/nginx/nginx.conf # Nginx configuration
      - ~/mydata/nginx/html:/usr/share/nginx/html       # Static files
      - ~/mydata/nginx/logs:/var/log/nginx              # Log files
    restart: always
    networks:
      - my_network

networks:
  my_network:
    name: my_network